[{"C:\\Users\\Kate\\my-app\\src\\index.js":"1","C:\\Users\\Kate\\my-app\\src\\App.js":"2","C:\\Users\\Kate\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\Kate\\my-app\\src\\components\\TicTacToe.js":"4","C:\\Users\\Kate\\my-app\\src\\components\\HelloWorld.js":"5","C:\\Users\\Kate\\my-app\\src\\components\\ToDoList.js":"6","C:\\Users\\Kate\\my-app\\src\\components\\ToDoItem.js":"7","C:\\Users\\Kate\\my-app\\src\\components\\Clock.js":"8"},{"size":1648,"mtime":1619628331646,"results":"9","hashOfConfig":"10"},{"size":561,"mtime":1608664627691,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":3235,"mtime":1610564563185,"results":"13","hashOfConfig":"10"},{"size":2022,"mtime":1619806200960,"results":"14","hashOfConfig":"10"},{"size":838,"mtime":1610565228641,"results":"15","hashOfConfig":"10"},{"size":686,"mtime":1619535659097,"results":"16","hashOfConfig":"10"},{"size":2297,"mtime":1619625682713,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11q845m",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},"C:\\Users\\Kate\\my-app\\src\\index.js",["38"],"C:\\Users\\Kate\\my-app\\src\\App.js",[],"C:\\Users\\Kate\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Kate\\my-app\\src\\components\\TicTacToe.js",["39"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return <Square key={i} value={this.props.squares[i]} onClick={() => this.props.onClick(i)} />;\r\n  }\r\n\r\n  renderRow = (n) => {\r\n    let r = [];\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      r.push( this.renderSquare(3*n + i) );\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">{this.renderRow(0)}</div>\r\n        <div className=\"board-row\">{this.renderRow(1)}</div>\r\n        <div className=\"board-row\">{this.renderRow(2)}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass TicTacToe extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        history: [{\r\n          squares: Array(9).fill(null),\r\n          i: null,\r\n        }],\r\n        xIsNext: true,\r\n        stepNumber: 0,\r\n      }\r\n  }\r\n\r\n  handleClick(i) {\r\n    const h = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = h[h.length - 1];\r\n    const s = current.squares.slice();\r\n    if (calculateWinner(s) || s[i]) {\r\n      return;\r\n    }\r\n    s[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: h.concat([{\r\n        squares: s,\r\n        i: i,\r\n      }]),\r\n      stepNumber: h.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\r\n      const coords = move ? ' (' + ((step.i % 3) + 1) + ', ' + ((step.i - (step.i % 3))/3 + 1) + ')' : '';\r\n      const cn = (move === this.state.stepNumber) ? 'currentstep' : '';\r\n      return (\r\n          <li key={move} className={cn}>\r\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n            {coords}\r\n          </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default TicTacToe;\r\n",["40","41"],"C:\\Users\\Kate\\my-app\\src\\components\\HelloWorld.js",["42"],"C:\\Users\\Kate\\my-app\\src\\components\\ToDoList.js",["43"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ToDoItem from './ToDoItem';\r\nimport '../index.css';\r\n\r\nclass ToDoList extends React.Component {\r\n  state = {\r\n    todos: [\r\n      {\r\n        id: 1,\r\n        title: 'First item',\r\n        completed: false\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Second item',\r\n        completed: true\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'Third item',\r\n        completed: false\r\n      }\r\n    ],\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <h1>To Do List</h1>\r\n        <div>\r\n          {\r\n              this.state.todos.map(\r\n                (td) => (<ToDoItem key={td.id} it={td} />)\r\n              )\r\n          }\r\n        </div>\r\n\r\n        <div className=\"line-between-components\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoList;\r\n","C:\\Users\\Kate\\my-app\\src\\components\\ToDoItem.js",[],"C:\\Users\\Kate\\my-app\\src\\components\\Clock.js",["44"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../index.css';\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {date1: new Date(), date2: new Date(), hoursAdded: 0};\r\n      //this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.timerId1 = setInterval( this.tick1, 1000 );\r\n      this.timerId2 = setInterval( this.tick2, 1000 );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      clearInterval(this.timerId1);\r\n      clearInterval(this.timerId2);\r\n    }\r\n\r\n    //Method 1: get the current time only once, then add seconds and hours to the stored value\r\n    tick1 = () => {\r\n      const d = new Date(this.state.date1.getTime() + 1000);\r\n      this.setState(\r\n        (state) => ({ date1: d })\r\n      );\r\n    }\r\n\r\n    //Method 2: get the current time every second, then add the stored number of additional hours\r\n    tick2 = () => {\r\n      let d = new Date();\r\n      d = new Date(d.getTime() + 1000*60*60*this.state.hoursAdded);\r\n      this.setState(\r\n        (state) => ({ date2: d })\r\n      );\r\n    }\r\n\r\n    jump1 = () => { //arrow function ensures that \"this\" is bound\r\n      const d2 = new Date(this.state.date1.getTime() + 1000*60*60);\r\n      this.setState(\r\n        (state) => ({ date1: d2 })\r\n      );\r\n    }\r\n\r\n    jump2 = () => {\r\n      this.setState(\r\n        (state) => ({ hoursAdded: state.hoursAdded + 1 })\r\n      );\r\n    }\r\n\r\n    handleClick = () => {\r\n      console.log(`You clicked me, ${this.props.name}!`);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"mt\">\r\n            Clock 1: {this.state.date1.toLocaleTimeString()} &nbsp;&nbsp;\r\n            <input type=\"button\" value=\"Jump an hour (method 1)\" onClick={this.jump1} />\r\n          </div>\r\n\r\n          <div className=\"mt\">\r\n            Clock 2: {this.state.date2.toLocaleTimeString()} &nbsp;&nbsp;\r\n            <input type=\"button\" value=\"Jump an hour (method 2)\" onClick={this.jump2} />\r\n          </div>\r\n\r\n          <div className=\"mt\">\r\n            <input type=\"button\" value=\"Click me\" onClick={this.handleClick} />\r\n          </div>\r\n          \r\n          <div className=\"line-between-components\"></div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Clock;\r\n",{"ruleId":"45","severity":1,"message":"46","line":3,"column":50,"nodeType":"47","messageId":"48","endLine":3,"endColumn":54},{"ruleId":"45","severity":1,"message":"49","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"45","severity":1,"message":"49","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},{"ruleId":"45","severity":1,"message":"49","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},{"ruleId":"45","severity":1,"message":"49","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-global-assign","no-unsafe-negation"]